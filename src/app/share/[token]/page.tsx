'use client'

import { useEffect, useState } from 'react'
import Head from 'next/head'

type Item = {
  chain_id: number
  token_address: string
  spender_address: string
  standard: string
  allowance_type: string
  amount: string
  is_unlimited: boolean
  badges: string[]
}

export default function SharePage({ params }: { params: Promise<{ token: string }> }) {
  const [data, setData] = useState<{ wallet: string; risk_only: boolean; expires_at: string | null; items: Item[] } | null>(null)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    ;(async () => {
      try {
        const { token } = await params
        const r = await fetch(`/api/share/${token}`)
        const j = await r.json()
        if (!r.ok) throw new Error(j.error || 'Error')
        setData(j)
      } catch (e: unknown) {
        setError(e instanceof Error ? e.message : 'Failed to load')
      }
    })()
  }, [params])

  return (
    <main className="mx-auto max-w-4xl px-6 py-10">
      {/* noindex */}
      <Head>
        <meta name="robots" content="noindex,nofollow" />
      </Head>

      <h1 className="text-2xl font-semibold">Allowance Guard — Shared Report</h1>
      {error && <div className="mt-4 rounded bg-red-50 px-3 py-2 text-sm text-red-700">{error}</div>}
      {!data && !error && <div className="mt-4 text-sm">Loading…</div>}

      {data && (
        <>
          <p className="text-sm text-gray-600 mt-2">
            Wallet: <span className="font-mono">{data.wallet}</span>
            {data.risk_only ? ' • Risky approvals only' : ' • All approvals'}
            {data.expires_at ? ` • Expires: ${new Date(data.expires_at).toLocaleString()}` : ' • No expiry'}
          </p>
          <div className="mt-6 overflow-x-auto">
            <table className="w-full text-sm">
              <thead className="text-left">
                <tr>
                  <th>Chain</th><th>Token</th><th>Spender</th><th>Std</th><th>Type</th><th>Amount</th><th>Badges</th>
                </tr>
              </thead>
              <tbody>
                {data.items.map((r, i) => (
                  <tr key={i} className="border-t">
                    <td>{r.chain_id}</td>
                    <td className="font-mono">{r.token_address}</td>
                    <td className="font-mono">{r.spender_address}</td>
                    <td>{r.standard}</td>
                    <td>{r.allowance_type}</td>
                    <td className="font-mono">{r.amount}</td>
                    <td className="space-x-1">{r.badges.map((b, j) => (
                      <span key={j} className={`rounded px-2 py-0.5 text-xs ${
                        b==='UNLIMITED' ? 'bg-crimson/10 text-crimson' : 'bg-amber/10 text-amber'
                      }`}>{b}</span>
                    ))}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          <p className="mt-4 text-xs text-gray-500">Read-only. Generated by Allowance Guard.</p>
        </>
      )}
    </main>
  )
}
